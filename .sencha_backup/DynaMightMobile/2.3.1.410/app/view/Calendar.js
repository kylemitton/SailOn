/*
 * File: app/view/Calendar.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DynaMightMobile.view.Calendar', {
    extend: 'Ext.Panel',

    requires: [
        'Ext.ux.TouchCalendarView',
        'Ext.ux.TouchCalendarDayEvents',
        'Ext.ux.TouchCalendarEvents',
        'Ext.ux.TouchCalendarEventsBase',
        'Ext.ux.TouchCalendarMonthEvents',
        'Ext.ux.TouchCalendarWeekEvents'
    ],

    config: {
        itemId: 'Calendar',
        layout: 'fit'
    },

    initialize: function() {

        this.callParent();

        var me = this, calendar,
            calendarStore = CreateStore("race"),
            eventStore;

        //debugger;

        //calendarStore.setData([{name: 'a',id: '1'}]);
        //calendarStore.load();
        //calendarStore.sync();

        Ext.define("Event", {
        	extend: "Ext.data.Model",
        	config: {
        		fields: [{
        			name: 'event',
        			type: 'string'
        		}, {
        			name: 'title',
        			type: 'string'
        		}, {
        			name: 'fulltitle',
        			type: 'string'
        		},{
        			name: 'start',
        			type: 'date',
        			dateFormat: 'c'
        		}, {
        			name: 'end',
        			type: 'date',
        			dateFormat: 'c'
        		}, {
        			name: 'color',
        			type: 'string'
        		},{
        			name: 'css',
        			type: 'string'
        		}]
        	}
        });

        calendarStore.execConfig({
            params: {
                entityViewID: GetEntityViewByName('Club Calendar').entityviewid ,
                filters: ''
            },
            callback: function(records){

                eventStore = Ext.create('Ext.data.Store', {
                    model: 'Event',
                    data:  me.processData(records)
                });
        //debugger;
                calendar = Ext.create('Ext.ux.TouchCalendarView', {
                        minDate: Ext.Date.add(new Date(), Ext.Date.DAY, -46),
                        maxDate: Ext.Date.add(new Date(), Ext.Date.DAY, 60),
                        viewMode: 'month',
                        weekStart: 0,
                        value: new Date(),
                        eventStore: eventStore,

                        plugins: [Ext.create('Ext.ux.TouchCalendarEvents', {
                            eventBarTpl: '<div>{title}</div>',
                            colourField: 'color'//,
                        })],
                        listeners: {
                            eventtap: function(event){
                                Ext.Msg.alert(event.get('event'), event.get('fulltitle'));

                            }
                        }
                    });

                me.add({
                    xtype: 'toolbar',
                    docked: 'top',
                    items: [{
                        xtype: 'button',
                        text: 'Month View',
                        handler: function(){
                            calendar.setViewMode('month');
                        }
                    }, {
                        xtype: 'button',
                        text: 'Week View',
                        handler: function(){
                            calendar.setViewMode('week');
                        }

                    }]
                } );

                me.add(
                    calendar
                );
            }
        });

        Ext.Viewport.setMasked(false);


    },

    processData: function(records) {
        var ret = [],
            d, today = Ext.Date.clearTime(new Date()),
            startDate, name,
            makeDate = function(date, d, h, m) {
                h = (h || 0) * 60;
                m = (m || 0);
                date = Ext.Date.add(date, Ext.Date.DAY, d);
                return Ext.Date.add(date, Ext.Date.MINUTE, h + m);
            };
        //debugger;
        for (d = 0; d < records.length; d++) {

            item = records[d];
            name = item.get('name');
            name = name.length > 30 ? name.substring(0,30) + ' ...' : name;
            //debugger;
            startDate = Ext.Date.clearTime(new Date(item.get('startdate')));
            ret.push(
            {
                "eventID": d,
                'event': item.get('raceid') ? 'Race' : 'Event' ,
                "title": name,
                'fulltitle': item.get('name'),
                "start": makeDate(startDate, 0, 1, 0),//Ext.Date.add(startDate, Ext.Date.SECOND, 1000),
                "end":  makeDate(startDate, 1, 0 , -1),//Ext.Date.add(startDate, Ext.Date.SECOND, 2000),
                recordRaw: item.raw,
                color: item.raw.color,
                css: 'red'
            });


        }
        return ret;
    }

});