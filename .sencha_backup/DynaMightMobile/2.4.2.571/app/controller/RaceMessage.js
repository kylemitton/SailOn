/*
 * File: app/controller/RaceMessage.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DynaMightMobile.controller.RaceMessage', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            raceLst: 'dataview#raceLst',
            raceMessageTxtArea: 'textareafield#raceMessageTxtArea',
            raceSearchTxt: 'searchfield#raceSearchTxt'
        },

        control: {
            "searchfield#raceSearchTxt": {
                keyup: 'onBoatSearch'
            },
            "button#setRaceMessageBtn": {
                tap: 'onSetRaceMessage'
            }
        }
    },

    onBoatSearch: function(textfield, e, eOpts) {
        var me = this,
            raceStore = CreateStore("race"),
            val = textfield.getValue();


        raceStore.execConfig({
            params: {
                entityViewID: GetEntityViewByName('Races').entityviewid ,
                filters:  val? "WHERE name like '%" + val + "%'" :  "WHERE 1=2"
            }
        });

        this.getRaceLst().setStore(raceStore);
    },

    onSetRaceMessage: function(button, e, eOpts) {
        var me= this,
            raceList = me.getRaceLst(),
            selectedRace = raceList.selected,
            items =[],
            rec = '',
            message = replaceHTMLSpCharacters(me.getRaceMessageTxtArea().getValue());

        if(selectedRace.length === 0){
            Ext.Msg.alert('Ooops','Plese select at least one race');
            return;
        }
        if(message === ''){
            Ext.Msg.alert('Ooops','Plese enter a message');
            return;
        }
        for(var i = 0;i < selectedRace.length; i++){
            rec = selectedRace.items[i].data;
            rec.message = message;
            items.push(rec);
        }
        AJAXCommand({
            params: items,
            method: 'SetRaceMessage',
            scope: me,
            callback: function(status, message, obj, scope) {
                //debugger;
                if (status) {

                    this.scope.getRaceLst().getStore().removeAll();
                    this.scope.getRaceMessageTxtArea().setValue('');
                    this.scope.getRaceSearchTxt().setValue('');

                }
                else
                {
                    Ext.Msg.alert('Ooops','Failed to set race message');
                }
            }
        });

    }

});