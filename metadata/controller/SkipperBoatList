{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "SkipperBoatList"
    },
    "designerId": "0bb7e3e1-b348-447f-9ce5-47b8aa69446a",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "list#myBoatList",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onMyBoatDetailsLst",
                "implHandler": [
                    "var me = this,\r",
                    "    wizard = me.getSkipperBoatList(),\r",
                    "    item = Ext.create('DynaMightMobile.view.BoatDetails',{\r",
                    "\r",
                    "        itemId:'myBoatDetailsPanel',\r",
                    "        config:{\r",
                    "            itemId:'detailsPnl'\r",
                    "        }\r",
                    "    });\r",
                    "item.setRecord(record);\r",
                    "\r",
                    " wizard.animateActiveItem(item,\r",
                    "                          {type: 'slide', direction:'right'});"
                ],
                "name": "itemtap"
            },
            "name": "onMyBoatDetailsLst",
            "designerId": "05ece87c-9c4c-41b6-a256-e896a3b95b88"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "boatDetails",
                "selector": "formpanel#myBoatDetailsPanel"
            },
            "name": "boatDetails",
            "designerId": "e2356b58-4ffb-48ac-8db6-0bb633bc8bae"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "skipperBoatList",
                "selector": "panel#skipperBoatPanel"
            },
            "name": "skipperBoatList",
            "designerId": "2a128db9-a041-41f4-aa1f-66128cdb0255"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#saveBoatBtn",
                "designer|targetType": "Ext.Button",
                "fn": "onBoatSave",
                "implHandler": [
                    "if(!this.getBoatDetails())",
                    "{",
                    "    //we save boat from registration wizard",
                    "    return;",
                    "}",
                    "var me = this, item, values,",
                    "    form = this.getBoatDetails(),",
                    "    items = form.getItems().items,",
                    "    bStore = CreateStore('boat'),",
                    "    popupPassword;",
                    "",
                    "",
                    "me.isFormValid = true;",
                    "",
                    "me.checkRequiredControls(form);",
                    "",
                    "if(!me.isFormValid){",
                    "    return;",
                    "}",
                    "",
                    "//PASSWORD METHOD FOR SkipperBoatList",
                    "//TODOL password",
                    "popupPassword = Ext.create('Ext.form.Panel', {",
                    "    modal: true,",
                    "    items: [",
                    "        {",
                    "",
                    "            xtype: 'textfield',",
                    "            label: 'Password',",
                    "            name: 'authpassword',",
                    "            required: true",
                    "        },",
                    "        {",
                    "            xtype: 'button',",
                    "            docked: 'right',",
                    "            itemId: 'verifyPasswordBtn',",
                    "            margin: 20,",
                    "            ui: 'decline-round',",
                    "            width: 250,",
                    "            text: 'Save',",
                    "            listeners: [",
                    "                {",
                    "                    fn: 'onVerifyPasswordBtnTap',",
                    "                    event: 'tap',",
                    "                    delegate: '#saveBoatBtn'",
                    "                }",
                    "            ],",
                    "            onVerifyPasswordBtnTap: function(button, e, eOpts) {",
                    "                alert('TODOL tap textpassword:'+this.down('#authpassword').getValue()+',frm pass:'+rm.down('#password').getValue());",
                    "",
                    "                //if(popupPassword.down('#authpassword').getValue() != frm.down('#password').getValue()){",
                    "                if(popupPassword.down('#authpassword').getValue() != frm.down('#password').getValue()){",
                    "                    Ext.Msg.show({",
                    "                        title: 'Incorrect Password',//T('errLogIn'),",
                    "                        message: 'Please introduce a correct password!',//T(''),",
                    "                        buttons: Ext.Msg.OK,",
                    "                        icon: Ext.Msg.ERROR,",
                    "                        modal: true",
                    "                    });",
                    "                    return;",
                    "                }",
                    "            }",
                    "",
                    "        }",
                    "    ]",
                    "}).showBy(button);",
                    "",
                    "",
                    "",
                    "//TODOL FINISH",
                    "",
                    "rec = form.getValues();",
                    "rec.EntityFields = bStore._model.prototype.entityFields;",
                    "rec.EntityName = 'boat';",
                    "",
                    "bStore.execConfig({",
                    "    method: 'EditEntity',",
                    "    params: rec,",
                    "    callback: function(store, a, b, c){",
                    "        me.onResponse();",
                    "    }",
                    "});"
                ],
                "name": "tap"
            },
            "name": "onBoatSave",
            "designerId": "7a2b74aa-34f0-4c03-9d92-74bea159e95a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "control"
                ],
                "fn": "checkRequiredControls",
                "implHandler": [
                    " var me = this,\r",
                    "     items = control.getItems().items;\r",
                    "\r",
                    "\r",
                    "\r",
                    "for (var i = 0; i <  items.length; i++) {\r",
                    "    \r",
                    "    item = items[i];\r",
                    "    if(item.initialConfig.required && !item.getValue()){\r",
                    "        Ext.Msg.show({\r",
                    "            title: 'Empty field',//T('errLogIn'),\r",
                    "            message: item.getLabel() + ' is required!',//T(''),\r",
                    "            buttons: Ext.Msg.OK,\r",
                    "            icon: Ext.Msg.ERROR,\r",
                    "            modal: true\r",
                    "        });\r",
                    "        me.isFormValid = false;\r",
                    "    }\r",
                    "    else if(item.getItems){\r",
                    "        me.checkRequiredControls(item);\r",
                    "    }\r",
                    "    \r",
                    "}"
                ]
            },
            "name": "checkRequiredControls",
            "designerId": "a80af71d-b4ae-4c4d-8f15-4034c0b4a88a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onResponse",
                "implHandler": [
                    "var me = this,\r",
                    "    item = Ext.create('DynaMightMobile.view.SkipperBoatList'),\r",
                    "    wizard = me.getBoatDetails(),\r",
                    "    view = me.getHomePanel();\r",
                    "\r",
                    "view.removeAll();\r",
                    "\r",
                    "view.add(item);"
                ]
            },
            "name": "onResponse",
            "designerId": "83cfe1fe-21d5-458a-b4d4-3904bf3987d2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainCt",
                "selector": "container#mainCtId"
            },
            "name": "mainCt",
            "designerId": "b8a1999e-fc8a-452d-abb0-6f1b0bf0602d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "homePanel",
                "selector": "panel#homePanel"
            },
            "name": "homePanel",
            "designerId": "25a82cc1-afd5-40b3-aace-e26c125d2f09"
        }
    ]
}