/*
 * File: app/controller/SkipperInformation.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DynaMightMobile.controller.SkipperInformation', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            skipperList: 'list#skipperList',
            ownerInfoFS: 'fieldset#ownerInfoFS',
            skipperInformation: 'formpanel#skipperInfoForm',
            skiperYATxt: 'textfield#skiperYATxt'
        },

        control: {
            "textfield#skiperYATxt": {
                keyup: 'onSearchSkipper',
                clearicontap: 'onClearTextSkipper'
            },
            "button#clearSkiperFSData": {
                tap: 'onClearSkipperInfo'
            },
            "list#skipperList": {
                itemtap: 'onSkiperListTap'
            },
            "button#saveSkipperInformation": {
                tap: 'onSaveSkipperInformation'
            }
        }
    },

    onSearchSkipper: function(textfield, e, eOpts) {
        var crewM = CreateStore('crewmember');
        crewM.execConfig({
            params: {
                entityViewID: GetEntityViewByName('Crew Members').entityviewid ,
                filters: " WHERE ya like '%" + textfield.getValue() + "%'"
            }
        });
        this.getSkipperList().setStore(crewM);
    },

    onClearSkipperInfo: function(button, e, eOpts) {
        this.getSkipperInformation().reset();
        this.getSkipperList().getStore().removeAll();
    },

    onSkiperListTap: function(dataview, index, target, record, e, eOpts) {

        this.getSkipperInformation().setRecord(record);
    },

    onSaveSkipperInformation: function(button, e, eOpts) {
        var me = this;
        AJAXCommand({
            params: me.getSkipperInformation().getValues(),
            method: 'UpdateSkipper',
            scope: me,
            callback: function(status, message, obj, scope) {
                //debugger;
                if (status) {
                    this.scope.getSkipperInformation().reset();
                    this.scope.getSkipperList().getStore().removeAll();

                   Ext.Msg.alert('Save skipper','Skipper added successfully!');
                }
                else
                {
                   Ext.Msg.alert('Save skipper','Failed to update skipper!');
                }
            }
        });
    },

    onClearTextSkipper: function(textfield, e, eOpts) {
        this.getSkipperInformation().reset();
        this.getSkipperList().getStore().removeAll();
    },

    searchSkipper: function() {
        this.onSearchSkipper(this.getSkiperYATxt());
    }

});